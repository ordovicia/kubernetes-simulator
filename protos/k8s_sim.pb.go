// Code generated by protoc-gen-go. DO NOT EDIT.
// source: k8s_sim.proto

package simRPC

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 测试
// 返回四个关键值的str
type Metrics struct {
	Clock                *Clock   `protobuf:"bytes,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Nodes                *Nodes   `protobuf:"bytes,2,opt,name=nodes,proto3" json:"nodes,omitempty"`
	Pods                 *Pods    `protobuf:"bytes,3,opt,name=pods,proto3" json:"pods,omitempty"`
	Queue                *Queue   `protobuf:"bytes,4,opt,name=queue,proto3" json:"queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c18405e8fba6db3, []int{0}
}

func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (m *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(m, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetClock() *Clock {
	if m != nil {
		return m.Clock
	}
	return nil
}

func (m *Metrics) GetNodes() *Nodes {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Metrics) GetPods() *Pods {
	if m != nil {
		return m.Pods
	}
	return nil
}

func (m *Metrics) GetQueue() *Queue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type Clock struct {
	ClockMetrics_Key     string   `protobuf:"bytes,1,opt,name=clock_metrics_Key,json=clockMetricsKey,proto3" json:"clock_metrics_Key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Clock) Reset()         { *m = Clock{} }
func (m *Clock) String() string { return proto.CompactTextString(m) }
func (*Clock) ProtoMessage()    {}
func (*Clock) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c18405e8fba6db3, []int{1}
}

func (m *Clock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clock.Unmarshal(m, b)
}
func (m *Clock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clock.Marshal(b, m, deterministic)
}
func (m *Clock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clock.Merge(m, src)
}
func (m *Clock) XXX_Size() int {
	return xxx_messageInfo_Clock.Size(m)
}
func (m *Clock) XXX_DiscardUnknown() {
	xxx_messageInfo_Clock.DiscardUnknown(m)
}

var xxx_messageInfo_Clock proto.InternalMessageInfo

func (m *Clock) GetClockMetrics_Key() string {
	if m != nil {
		return m.ClockMetrics_Key
	}
	return ""
}

type Nodes struct {
	NodesMetricsKey      string   `protobuf:"bytes,1,opt,name=nodes_metrics_key,json=nodesMetricsKey,proto3" json:"nodes_metrics_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nodes) Reset()         { *m = Nodes{} }
func (m *Nodes) String() string { return proto.CompactTextString(m) }
func (*Nodes) ProtoMessage()    {}
func (*Nodes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c18405e8fba6db3, []int{2}
}

func (m *Nodes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nodes.Unmarshal(m, b)
}
func (m *Nodes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nodes.Marshal(b, m, deterministic)
}
func (m *Nodes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nodes.Merge(m, src)
}
func (m *Nodes) XXX_Size() int {
	return xxx_messageInfo_Nodes.Size(m)
}
func (m *Nodes) XXX_DiscardUnknown() {
	xxx_messageInfo_Nodes.DiscardUnknown(m)
}

var xxx_messageInfo_Nodes proto.InternalMessageInfo

func (m *Nodes) GetNodesMetricsKey() string {
	if m != nil {
		return m.NodesMetricsKey
	}
	return ""
}

type Pods struct {
	PodsMetricsKey       string   `protobuf:"bytes,1,opt,name=pods_metrics_key,json=podsMetricsKey,proto3" json:"pods_metrics_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pods) Reset()         { *m = Pods{} }
func (m *Pods) String() string { return proto.CompactTextString(m) }
func (*Pods) ProtoMessage()    {}
func (*Pods) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c18405e8fba6db3, []int{3}
}

func (m *Pods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pods.Unmarshal(m, b)
}
func (m *Pods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pods.Marshal(b, m, deterministic)
}
func (m *Pods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pods.Merge(m, src)
}
func (m *Pods) XXX_Size() int {
	return xxx_messageInfo_Pods.Size(m)
}
func (m *Pods) XXX_DiscardUnknown() {
	xxx_messageInfo_Pods.DiscardUnknown(m)
}

var xxx_messageInfo_Pods proto.InternalMessageInfo

func (m *Pods) GetPodsMetricsKey() string {
	if m != nil {
		return m.PodsMetricsKey
	}
	return ""
}

type Queue struct {
	QueueMetricsKey      string   `protobuf:"bytes,1,opt,name=queue_metrics_key,json=queueMetricsKey,proto3" json:"queue_metrics_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Queue) Reset()         { *m = Queue{} }
func (m *Queue) String() string { return proto.CompactTextString(m) }
func (*Queue) ProtoMessage()    {}
func (*Queue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c18405e8fba6db3, []int{4}
}

func (m *Queue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Queue.Unmarshal(m, b)
}
func (m *Queue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Queue.Marshal(b, m, deterministic)
}
func (m *Queue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Queue.Merge(m, src)
}
func (m *Queue) XXX_Size() int {
	return xxx_messageInfo_Queue.Size(m)
}
func (m *Queue) XXX_DiscardUnknown() {
	xxx_messageInfo_Queue.DiscardUnknown(m)
}

var xxx_messageInfo_Queue proto.InternalMessageInfo

func (m *Queue) GetQueueMetricsKey() string {
	if m != nil {
		return m.QueueMetricsKey
	}
	return ""
}

type Result struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c18405e8fba6db3, []int{5}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Metrics)(nil), "simRPC.Metrics")
	proto.RegisterType((*Clock)(nil), "simRPC.Clock")
	proto.RegisterType((*Nodes)(nil), "simRPC.Nodes")
	proto.RegisterType((*Pods)(nil), "simRPC.Pods")
	proto.RegisterType((*Queue)(nil), "simRPC.Queue")
	proto.RegisterType((*Result)(nil), "simRPC.Result")
}

func init() { proto.RegisterFile("k8s_sim.proto", fileDescriptor_4c18405e8fba6db3) }

var fileDescriptor_4c18405e8fba6db3 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xbd, 0x4e, 0x84, 0x40,
	0x10, 0x16, 0x05, 0x8c, 0xa3, 0xdc, 0xe9, 0x16, 0x86, 0x58, 0x11, 0x6c, 0x2e, 0x16, 0xc4, 0x70,
	0x8d, 0x85, 0xdd, 0x95, 0x17, 0xcd, 0x39, 0x2f, 0x40, 0x22, 0x6c, 0x41, 0x38, 0xdc, 0x93, 0x81,
	0xe2, 0x5e, 0xc5, 0xa7, 0x35, 0x33, 0xcb, 0xea, 0x91, 0xd0, 0xed, 0x7e, 0x3f, 0xf3, 0x7d, 0xbb,
	0x03, 0x51, 0xf3, 0x42, 0x05, 0xd5, 0x6d, 0x76, 0xe8, 0x4c, 0x6f, 0x54, 0x48, 0x75, 0x8b, 0xbb,
	0x4d, 0xfa, 0xe3, 0xc1, 0xe5, 0x9b, 0xee, 0xbb, 0xba, 0x24, 0xf5, 0x08, 0x41, 0xb9, 0x37, 0x65,
	0x13, 0x7b, 0x89, 0xb7, 0xba, 0xce, 0xa3, 0xcc, 0x6a, 0xb2, 0x0d, 0x83, 0x68, 0x39, 0x16, 0x7d,
	0x99, 0x4a, 0x53, 0x7c, 0x3e, 0x15, 0xbd, 0x33, 0x88, 0x96, 0x53, 0x09, 0xf8, 0x07, 0x53, 0x51,
	0x7c, 0x21, 0x9a, 0x1b, 0xa7, 0xd9, 0x99, 0x8a, 0x50, 0x18, 0x1e, 0xf3, 0x3d, 0xe8, 0x41, 0xc7,
	0xfe, 0x74, 0xcc, 0x07, 0x83, 0x68, 0xb9, 0x74, 0x0d, 0x81, 0x64, 0xab, 0x27, 0xb8, 0x93, 0xf4,
	0xa2, 0xb5, 0x55, 0x8b, 0xad, 0x3e, 0x4a, 0xcb, 0x2b, 0x5c, 0x0a, 0x31, 0x3e, 0x61, 0xab, 0x8f,
	0x6c, 0x92, 0x2e, 0x6c, 0x92, 0x36, 0x7f, 0xa6, 0xe6, 0xdf, 0x24, 0xc4, 0x89, 0xe9, 0x19, 0x7c,
	0x2e, 0xa7, 0x56, 0x70, 0xcb, 0xf5, 0x66, 0x2c, 0x0b, 0xc6, 0xa7, 0x31, 0xd2, 0x95, 0x63, 0xa4,
	0xed, 0x5c, 0x8c, 0x10, 0x27, 0xa6, 0x04, 0x42, 0xd4, 0x34, 0xec, 0x7b, 0x75, 0x0f, 0x61, 0x27,
	0x27, 0x91, 0x06, 0x38, 0xde, 0xf2, 0x57, 0x18, 0x37, 0xa3, 0x72, 0x88, 0x50, 0x97, 0xa6, 0xab,
	0xdc, 0x7a, 0x96, 0xee, 0x8f, 0x46, 0xe0, 0x61, 0xe1, 0x00, 0x3b, 0x33, 0x3d, 0xfb, 0x0c, 0x65,
	0xb9, 0xeb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc2, 0xf8, 0x8d, 0x92, 0xed, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SimRPCClient is the client API for SimRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SimRPCClient interface {
	RecordMetrics(ctx context.Context, in *Metrics, opts ...grpc.CallOption) (*Result, error)
}

type simRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewSimRPCClient(cc grpc.ClientConnInterface) SimRPCClient {
	return &simRPCClient{cc}
}

func (c *simRPCClient) RecordMetrics(ctx context.Context, in *Metrics, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/simRPC.simRPC/RecordMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SimRPCServer is the server API for SimRPC service.
type SimRPCServer interface {
	RecordMetrics(context.Context, *Metrics) (*Result, error)
}

// UnimplementedSimRPCServer can be embedded to have forward compatible implementations.
type UnimplementedSimRPCServer struct {
}

func (*UnimplementedSimRPCServer) RecordMetrics(ctx context.Context, req *Metrics) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordMetrics not implemented")
}

func RegisterSimRPCServer(s *grpc.Server, srv SimRPCServer) {
	s.RegisterService(&_SimRPC_serviceDesc, srv)
}

func _SimRPC_RecordMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Metrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimRPCServer).RecordMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/simRPC.simRPC/RecordMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimRPCServer).RecordMetrics(ctx, req.(*Metrics))
	}
	return interceptor(ctx, in, info, handler)
}

var _SimRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "simRPC.simRPC",
	HandlerType: (*SimRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RecordMetrics",
			Handler:    _SimRPC_RecordMetrics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "k8s_sim.proto",
}
